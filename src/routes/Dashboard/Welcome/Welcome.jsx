import React, { useState } from "react";
import { Typography, Box, Button, Stack } from "@mui/joy";

import FeatureLayout from "./FeatureLayout";

import ImageMan from "../../../assets/images/Diet-bro.svg";
import ImageWoman from "../../../assets/images/Diet-sis.svg";

import LogImage from "../../../assets/images/healthy food-amico.svg";
import TrackImage from "../../../assets/images/analytics-bro.svg";
import EditImage from "../../../assets/images/Setup-rafiki.svg";

const FEATURES = [
  {
    title: "K√∂sz√∂nt√ºnk a Nutritracker alkalmaz√°sban!",
    description:
      "√ñr√ºl√ºnk, hogy csatlakozt√°l! Az eg√©szs√©gesebb t√°pl√°lkoz√°s √∫tja itt kezd≈ëdik. K√∂vesd az √©tkez√©seidet, √°ll√≠ts be c√©lokat, √©s szerezz hasznos visszajelz√©seket, hogy egyre eg√©szs√©gesebb √©letet √©lhess ‚Äî falatonk√©nt. V√°gjunk bele! üí™",
    image: ImageMan,
  },
  {
    title: "√âtelek, alapanyagok napl√≥z√°sa",
    description:
      "Keress r√° a nap sor√°n elfogyasztott √©teleidre √©s alapanyagaidra egy folyamatosan b≈ëv√ºl≈ë adatb√°zisban, napl√≥zd ≈ëket √©s k√∂vesd a napi t√°panyag-beviteledet!",
    image: LogImage,
  },
  {
    title: "Saj√°t alapanyagok, kedvencek",
    description:
      "Ha nem tal√°lod a keresett alapanyagot, adj hozz√° saj√°tokat! Mentsd el kedvenceidet, hogy gyorsan napl√≥zni tudd ≈ëket!",
    image: EditImage,
  },
  {
    title: "Hat√°rozz meg c√©lokat, √©rj el eredm√©nyeket",
    description:
      "Ha konkr√©t c√©ljaid vannak, kezdj el egy di√©t√°s peri√≥dust √©s k√∂vesd a fejl≈ëd√©sed!",
    image: TrackImage,
  },
  {
    title: "Szem√©lyre szabott tippek, √©rdekess√©gek",
    description:
      "Seg√≠t√ºnk a c√©ljaid el√©r√©s√©ben szem√©lyre szabott tippekkel, √∂tletekkel √©s naponta kaphatsz tanulm√°nyokkal al√°t√°masztott √©rdekess√©geket.",
    image: TrackImage,
  },
];

const Welcome = () => {
  const [currentFeature, setCurrentFeature] = useState(0);

  const handleNextFeature = () => {
    if (currentFeature === FEATURES.length - 1) return;
    setCurrentFeature(currentFeature + 1);
  };

  return (
    <Box
      sx={{
        height: "100%",
        display: "flex",
        flexDirection: "column",
        justifyContent: "center",
        alignItems: "center",
        margin: "0 auto",
      }}
    >
      <Box
        sx={{
          height: "100%",
          width: "80%",
          maxWidth: "800px",
          display: "flex",
          flexDirection: "column",
          justifyContent: "space-between",
          alignItems: "center",
          margin: "0 auto",
          p: 10,
        }}
      >
        <FeatureLayout currentFeature={currentFeature} features={FEATURES} />

        <Stack direction="row" gap={10} width="100%" justifyContent="center">
          <Button variant="outlined" fullWidth sx={{ maxWidth: 250 }}>
            Elkezdem
          </Button>

          {currentFeature !== FEATURES.length - 1 ? (
            <Button
              variant="solid"
              fullWidth
              sx={{ maxWidth: 250 }}
              onClick={handleNextFeature}
            >
              {currentFeature === 0 ? "Felfedez√©s" : "K√∂vetkez≈ë"}
            </Button>
          ) : (
            ""
          )}
        </Stack>
      </Box>
    </Box>
  );
};

export default Welcome;
